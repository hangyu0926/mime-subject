<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nanmi.msts.web.dao.UserMapper">
    <resultMap id="userMap" type="cn.nanmi.msts.web.model.UserDTO">
        <result column="USER_ID" javaType="Long" property="userId"></result>
        <result column="MOBILE_NO" javaType="String" property="userMobile"></result>
        <result column="USER_NAME" javaType="String" property="userName"></result>
        <result column="LOGIN_NAME" javaType="String" property="mailAddress"></result>
        <result column="LOGIN_PASS" javaType="String" property="loginPass"></result>
        <result column="PERMISSION" javaType="Integer" property="permissionId"></result>
        <result column="DEL_FLAG" javaType="Integer" property="deleteFlag"></result>
        <result column="CREATE_MAN" javaType="Long" property="createMan"></result>
        <result column="CREATE_TIME" javaType="Date" property="createTime"></result>
        <result column="STOCKS_AMT" javaType="Integer" property="totalStock"></result>
        <result column="STOCKS_SALE_AMT" javaType="Integer" property="availableStock"></result>
        <result column="FROZEN_STOCKS" javaType="Integer" property="frozenStock"></result>

    </resultMap>

    <!-- 根据用户名查找用户 -->
    <select id="getUserByMail" resultMap="userMap" parameterType="String">
    	select USER_ID,MOBILE_NO,USER_NAME,LOGIN_NAME,LOGIN_PASS,PERMISSION,DEL_FLAG,CREATE_MAN,CREATE_TIME,STOCKS_AMT,STOCKS_SALE_AMT,FROZEN_STOCKS
    	from USER
        where LOGIN_NAME=#{mail} AND DEL_FLAG=0
    </select>

    <select id="getUsersByUserGroups" resultType="java.lang.String">
        SELECT WX_USER_ID
        FROM USER
        WHERE WX_USER_ID IS NOT NULL AND PERMISSION_ID IN
        (
        <foreach collection="userGroups" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <!-- 根据userID修改密码 -->
    <update id="modifyPwdByUserID">
        UPDATE USER SET LOGIN_PASS=#{password} WHERE USER_ID=#{userID}
    </update>




    <insert id="addUser" parameterType="cn.nanmi.msts.web.web.vo.in.AddUserVO">
        INSERT INTO USER
        (
          MOBILE_NO,USER_NAME,LOGIN_NAME,LOGIN_PASS,PERMISSION,DEL_FLAG,CREATE_MAN,CREATE_TIME,STOCKS_AMT,STOCKS_SALE_AMT,FROZEN_STOCKS
        )
        VALUES
        (
        #{userMobile},
        #{userName},
        #{userMailAdd},
        'e10adc3949ba59abbe56e057f20f883e',
        2,
        0,
        1,
        NOW(),
         #{totalStock},
         #{availableStock},
         0
        )
    </insert>

    <select id="getEmployeeTotalNum"
            resultType="java.lang.Long">
        SELECT COUNT(1) FROM USER WHERE DEL_FLAG=0 AND PERMISSION!=1
    </select>

    <select id="getEmployeeNum" parameterType="cn.nanmi.msts.web.web.vo.in.GetUserPageListVO"
            resultType="java.lang.Long">
        SELECT COUNT(1) FROM USER  WHERE DEL_FLAG=0 AND PERMISSION!=1
        <if test="keyWords != null and keyWords != '' ">
            AND (MOBILE_NO LIKE '%${keyWords}%'
            OR USER_NAME LIKE '%${keyWords}%'
            OR LOGIN_NAME LIKE '%${keyWords}%')
        </if>
    </select>

    <select id="getEmployeeListByVO" parameterType="cn.nanmi.msts.web.web.vo.in.GetUserPageListVO"
            resultType="cn.nanmi.msts.web.web.vo.out.UserModelVO">
        SELECT
        USER_ID AS userId,
        MOBILE_NO AS userMobile,
        USER_NAME AS userName,
        LOGIN_NAME AS userMailAdd,
        PERMISSION AS permissionId,
        STOCKS_AMT AS totalStock,
        STOCKS_SALE_AMT AS availableStock
        FROM USER
        WHERE DEL_FLAG=0 AND PERMISSION!=1

        <if test="keyWords != null and keyWords != '' ">
            AND (MOBILE_NO LIKE '%${keyWords}%'
            OR USER_NAME LIKE '%${keyWords}%'
            OR LOGIN_NAME LIKE '%${keyWords}%')
        </if>
         ORDER BY USER_ID ASC
        limit #{startPage},#{pageSize}
    </select>
    <select id="getMailList" resultType="java.lang.String">
        SELECT
        LOGIN_NAME
        FROM USER
        WHERE DEL_FLAG=0
        ORDER BY USER_ID ASC
    </select>

    <update id="deleteEmployee">
        UPDATE USER SET
        DEL_FLAG=1
        WHERE USER_ID=#{userId}
    </update>

    <update id="resetUserPassword">
        UPDATE USER SET
        LOGIN_PASS='e10adc3949ba59abbe56e057f20f883e'
        WHERE USER_ID=#{userId}
    </update>


    <!--public Long getEmployeeNumByWorkId(String workId);-->
    <select id="getEmployeeNumByMobile" resultType="java.lang.Long">
        SELECT COUNT(1) FROM USER WHERE MOBILE_NO=#{mobile} AND DEL_FLAG=0

    </select>
    <!--public Long getEmployeeNumByEmail(String email);-->
    <select id="getEmployeeNumByEmail" resultType="java.lang.Long">
        SELECT COUNT(1) FROM USER WHERE LOGIN_NAME=#{email} AND DEL_FLAG=0
    </select>

    <update id="frozenStocks" >
        UPDATE USER  SET STOCKS_SALE_AMT = STOCKS_SALE_AMT - #{stockAmt},FROZEN_STOCKS = FROZEN_STOCKS +  #{stockAmt} WHERE USER_ID = #{sellId}
    </update>
    <update id="balanceOrder" >
        UPDATE USER  SET STOCKS_AMT =  STOCKS_AMT - #{stockAmt},FROZEN_STOCKS = FROZEN_STOCKS - #{stockAmt} WHERE USER_ID = #{userId}
    </update>

    <update id="restoreFrozenStocks" >
        UPDATE USER  SET STOCKS_SALE_AMT = STOCKS_SALE_AMT + #{stockAmt},FROZEN_STOCKS = FROZEN_STOCKS -  #{stockAmt} WHERE USER_ID = #{sellId}
    </update>
</mapper>