<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nanmi.msts.web.dao.OrderMapper">
    <resultMap id="biddingListMap" type="cn.nanmi.msts.web.model.BiddingDTO">
        <result column="ORDER_NO" javaType="String" property="orderNo"></result>
        <result column="STOCKS_AMT" javaType="Double" property="stockAmt"></result>
        <result column="INITIAL_PRICE" javaType="Double" property="initialPrice"></result>
        <result column="USER_NAME" javaType="String" property="sellerName"></result>
        <result column="MAX_BIDDING_PRICE" javaType="Double" property="maxBiddingPrice"></result>
        <result column="MAX_BIDDER" javaType="Long" property="maxBidder"></result>
        <result column="SALE_TIME" javaType="Date" property="saleTime"></result>
        <result column="EXPIRE_TIME" javaType="Date" property="expireTime"></result>
    </resultMap>

    <resultMap id="orderListMap" type="cn.nanmi.msts.web.model.OrderDTO">
        <result column="ORDER_NO" javaType="String" property="orderNo"></result>
        <result column="STOCKS_AMT" javaType="Double" property="stockAmt"></result>
        <result column="INITIAL_PRICE" javaType="Double" property="initialPrice"></result>
        <result column="ORDER_STATE" javaType="int" property="orderState"></result>
        <result column="SELLER_ID" javaType="Long" property="sellerId"></result>
        <result column="USER_NAME" javaType="String" property="sellerName"></result>
        <result column="MAX_BIDDING_PRICE" javaType="Double" property="maxBiddingPrice"></result>
        <result column="MAX_BIDDER" javaType="Long" property="maxBidder"></result>
        <result column="CREATE_TIME" javaType="Date" property="createTime"></result>
        <result column="SALE_TIME" javaType="Date" property="saleTime"></result>
        <result column="EXPIRE_TIME" javaType="Date" property="expireTime"></result>
        <result column="SYSTEM_RULE_ID" javaType="Long" property="systemRuleId"></result>
        <result column="SELLER_CONFIRM" javaType="int" property="sellerConfirm"></result>
    </resultMap>

    <select id="getBiddingList" resultMap="biddingListMap">
        SELECT ORDER_NO,UO.STOCKS_AMT,INITIAL_PRICE,UU.USER_NAME,MAX_BIDDING_PRICE,MAX_BIDDER,SALE_TIME,EXPIRE_TIME
        FROM USER_ORDER UO
        LEFT JOIN USER UU
        ON UU.USER_ID = UO.SELLER_ID
		WHERE UO.ORDER_STATE IN (3,4)
		AND UO.EXPIRE_TIME > NOW()
		AND UO.SELLER_ID != #{userId}
		ORDER BY UO.SALE_TIME DESC
		LIMIT #{startPage},#{pageSize}
    </select>

    <select id="getBiddingListCount" resultType="Long">
        SELECT COUNT(1)
        FROM USER_ORDER UO
        LEFT JOIN USER UU
        ON UU.USER_ID = UO.SELLER_ID
        WHERE UO.ORDER_STATE IN (3,4)
        AND UO.EXPIRE_TIME > NOW()
        AND UO.SELLER_ID != #{userId}
    </select>

    <insert id="releaseOrder" parameterType="cn.nanmi.msts.web.model.OrderDTO" >
        insert into USER_ORDER (ORDER_ID, ORDER_NO, STOCKS_AMT,
        INITIAL_PRICE, ORDER_STATE, SELLER_ID,CREATE_TIME,SYSTEM_RULE_ID,MAX_BIDDING_PRICE)
        values (#{orderId}, #{orderNo}, #{stockAmt}, #{initialPrice},
         1, #{sellerId}, now(),#{systemRuleId},#{initialPrice})
    </insert>

    <select id="getMyOrder" resultMap="orderListMap">
        SELECT ORDER_NO,UO.STOCKS_AMT,INITIAL_PRICE,
        case when (ORDER_STATE = 3 or ORDER_STATE = 4) and now() > UO.EXPIRE_TIME then 9
        else ORDER_STATE end as ORDER_STATE,
        SELLER_ID,UU.USER_NAME,MAX_BIDDER,
        case when MAX_BIDDER is null then 0
        else MAX_BIDDING_PRICE end as MAX_BIDDING_PRICE,
        MAX_BIDDING_PRICE,MAX_BIDDER,UO.CREATE_TIME,SALE_TIME,EXPIRE_TIME,SYSTEM_RULE_ID,
        case when ORDER_STATE=4 and  date_add(SALE_TIME, interval SS.BACK_PERIOD hour) > now() and UO.EXPIRE_TIME >  now()  then 0
				else 1 end as hasbackout,
		 case when ORDER_STATE=6 and SELLER_CONFIRM is null then 0
               else 1 end as SELLER_CONFIRM
        FROM USER_ORDER UO
        LEFT JOIN SYSTEM_RULES SS
		ON SS.RULE_ID = UO.SYSTEM_RULE_ID
        LEFT JOIN USER UU
        ON UU.USER_ID = UO.SELLER_ID
        WHERE UO.SELLER_ID = #{userId}
        ORDER BY UO.CREATE_TIME DESC
        LIMIT #{startPage},#{pageSize}
    </select>

    <select id="getMyOrderCount" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM USER_ORDER UO
        LEFT JOIN USER UU
        ON UU.USER_ID = UO.SELLER_ID
        WHERE UO.SELLER_ID = #{userId}
    </select>

    <update id="updateOrderState">
        UPDATE USER_ORDER SET
        ORDER_STATE=#{orderState}
        WHERE ORDER_NO=#{orderNo}
    </update>

    <update id="updateOrderSaleTime">
        UPDATE USER_ORDER SET
        SALE_TIME= now(),EXPIRE_TIME = date_add(now(), interval #{biddingPeriod} hour)
        WHERE ORDER_NO=#{orderNo}
    </update>

    <select id="getPreBidding" resultType="cn.nanmi.msts.web.model.PreBiddingDTO">
        SELECT SR.MIN_STOCK_PRICE AS minPrice,SR.MAX_STOCK_PRICE AS maxPrice,SR.MIN_MAKEUP AS minMakeUp,SR.MAX_MAKEUP AS maxMakeUp,UO.MAX_BIDDING_PRICE AS nowPrice,UO.MAX_BIDDER AS maxBidder
        FROM USER_ORDER UO
        LEFT JOIN SYSTEM_RULES SR
        ON SR.RULE_ID = UO.SYSTEM_RULE_ID
        WHERE UO.ORDER_NO = #{orderNo}
    </select>

    <select id="getOrderDetail" resultType="cn.nanmi.msts.web.model.BiddingDetailDTO">
        SELECT
          ORDER_NO AS orderNo,
          STOCKS_AMT AS stockAmt,
          INITIAL_PRICE AS initialPrice,
          ORDER_STATE AS orderStatus,
          SELLER_ID AS sellerId,
          MAX_BIDDING_PRICE AS maxBiddingPrice,
          MAX_BIDDER AS maxBidder,
          SELLER_CONFIRM AS sellerConfirm,
          BUYER_CONFIRM AS buyerConfirm,
          UO.CREATE_TIME AS createTime,
          SALE_TIME AS saleTime,
          EXPIRE_TIME AS expireTime,
          SYSTEM_RULE_ID AS sysRuleId,
          REMARKS AS remarks,
          SR.MIN_STOCK_PRICE AS minPrice,
          SR.MAX_STOCK_PRICE AS maxPrice,
          SR.MIN_MAKEUP AS minMakeUp,
          SR.MAX_MAKEUP AS maxMakeUp
        FROM USER_ORDER UO
        LEFT JOIN SYSTEM_RULES SR
        ON SR.RULE_ID = UO.SYSTEM_RULE_ID
        WHERE ORDER_NO = #{orderNo}
    </select>
    <!-- 获取拍卖竞拍结束订单 -->
    <select id="getCompleteOrder" resultType="String">
         SELECT ORDER_NO  FROM USER_ORDER WHERE date(EXPIRE_TIME) = curdate()-1 AND ORDER_STATE IN (3,4) AND MAX_BIDDER IS NOT NULL;
    </select>
    <!-- 定时更新拍卖竞拍结束订单 -->
    <update id="updateStatus">
        UPDATE USER_ORDER  SET  ORDER_STATE=6 WHERE date(EXPIRE_TIME) = curdate()-1 AND ORDER_STATE IN (3,4) AND MAX_BIDDER IS NOT NULL;
    </update>

    <!-- 定时更新流拍订单 -->
    <update id="updateStatus2Pass" >
        UPDATE USER_ORDER  SET  ORDER_STATE=8 WHERE date(EXPIRE_TIME) = curdate()-1 AND ORDER_STATE IN (3,4) AND MAX_BIDDER IS  NULL;
    </update>

    <select id="getPassOrder" resultMap="orderListMap">
        SELECT SELLER_ID,SUM(STOCKS_AMT) AS STOCKS_AMT FROM USER_ORDER WHERE date(EXPIRE_TIME) = curdate()-1 AND ORDER_STATE IN (3,4) AND MAX_BIDDER IS  NULL GROUP BY SELLER_ID
    </select>

    <select id="getSystemRules" resultType="cn.nanmi.msts.web.model.SystemRules">
        select RULE_ID as ruleId,BIDDING_PERIOD as biddingPeriod,MIN_STOCK_PRICE AS minStockPrice,MAX_STOCK_PRICE AS maxStockPrice from SYSTEM_RULES ORDER BY CREATE_TIME desc limit 1
    </select>

    <select id="beConfirmedList" resultMap="orderListMap">
       SELECT ORDER_NO,UO.STOCKS_AMT,INITIAL_PRICE,ORDER_STATE,SELLER_ID,UU.USER_NAME,MAX_BIDDING_PRICE,MAX_BIDDER,UO.CREATE_TIME,SALE_TIME,EXPIRE_TIME,SYSTEM_RULE_ID,
      (select count(*) from USER_OPERATION_STATUS where ORDER_NO = UO.ORDER_NO) as buyerCounts
      FROM USER_ORDER UO
      LEFT JOIN USER UU ON UU.USER_ID = UO.SELLER_ID
      WHERE ORDER_STATE = 6 ORDER BY UO.SALE_TIME DESC
      LIMIT #{startPage},#{pageSize}
    </select>

    <select id="releaseAuditList" resultMap="orderListMap">
        SELECT ORDER_NO,UO.STOCKS_AMT,INITIAL_PRICE,ORDER_STATE,SELLER_ID,UU.USER_NAME,MAX_BIDDING_PRICE,MAX_BIDDER,UO.CREATE_TIME,SALE_TIME,EXPIRE_TIME,SYSTEM_RULE_ID
        FROM USER_ORDER UO
        LEFT JOIN USER UU ON UU.USER_ID = UO.SELLER_ID
        WHERE ORDER_STATE = 1 ORDER BY UO.CREATE_TIME DESC
        LIMIT #{startPage},#{pageSize}
    </select>

    <select id="backoutAuditList" resultMap="orderListMap">
        SELECT ORDER_NO,UO.STOCKS_AMT,INITIAL_PRICE,ORDER_STATE,SELLER_ID,UU.USER_NAME,
        case when MAX_BIDDER is null then 0
        else MAX_BIDDING_PRICE end as MAX_BIDDING_PRICE,
        MAX_BIDDER,UO.CREATE_TIME,SALE_TIME,EXPIRE_TIME,SYSTEM_RULE_ID
        FROM USER_ORDER UO
        LEFT JOIN USER UU ON UU.USER_ID = UO.SELLER_ID
        WHERE ORDER_STATE = 3 AND UO.EXPIRE_TIME > NOW() ORDER BY UO.CREATE_TIME DESC
        LIMIT #{startPage},#{pageSize}
    </select>

    <select id="beConfirmedListCount" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM USER_ORDER UO
        LEFT JOIN USER UU ON UU.USER_ID = UO.SELLER_ID
        WHERE ORDER_STATE = 6
    </select>

    <select id="releaseAuditListCount" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM USER_ORDER UO
        LEFT JOIN USER UU ON UU.USER_ID = UO.SELLER_ID
        WHERE ORDER_STATE = 1
    </select>

    <select id="backoutAuditListCount" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM USER_ORDER UO
        LEFT JOIN USER UU ON UU.USER_ID = UO.SELLER_ID
        WHERE ORDER_STATE = 3 AND UO.EXPIRE_TIME > NOW()
    </select>

    <update id="updateOrderBidding">
      UPDATE USER_ORDER
      SET MAX_BIDDING_PRICE = #{biddingPrice},MAX_BIDDER = #{bidderId}
      WHERE
      ORDER_NO = #{orderNo}
      AND ORDER_STATE IN (3,4)
      AND EXPIRE_TIME > NOW()
    </update>

    <select id="jumpReleaseOrder" resultType="cn.nanmi.msts.web.model.JumpReleaseOrderDTO">
        SELECT UU.STOCKS_SALE_AMT AS stocksSaleAmt,SR.MIN_STOCK_PRICE AS minStockPrice,SR.MAX_STOCK_PRICE AS maxStockPrice
        FROM USER UU, SYSTEM_RULES SR
        WHERE UU.USER_ID = #{userId}
         ORDER BY SR.CREATE_TIME desc limit 1
    </select>

    <insert id="insertNewConfig" parameterType="cn.nanmi.msts.web.web.vo.in.UpdateConfigVO" >
        insert into SYSTEM_RULES (MIN_STOCK_PRICE, MAX_STOCK_PRICE, MIN_MAKEUP,
        MAX_MAKEUP, BIDDING_PERIOD,BACK_PERIOD,CREATE_TIME)
        values (#{startAmt}, #{maxAmt}, #{minAdd}, #{maxAdd},#{stockTime},#{backTime},NOW())
    </insert>

    <insert id="releaseAudit" parameterType="cn.nanmi.msts.web.model.OrderCheckDTO" >
        insert into ORDER_CHECKING (AUDITOR,TRANS_ID, ORDER_NO, CHECKING_TYPE,
        CHECKING_VIEW, CHECKING_RESULT,CREATE_TIME)
        values (#{auditor}, #{transId}, #{orderNo}, #{checkingType},
        #{checkingView},#{checkingResult},now())
    </insert>

    <update id="confirmOrder">
        UPDATE USER_ORDER
        SET
        <if test="orderState != null">
            ORDER_STATE = #{orderState},
        </if>
        <if test="sellerConfirm != null">
            SELLER_CONFIRM = #{sellerConfirm}
        </if>
        <if test="buyerConfirm != null">
            BUYER_CONFIRM = #{buyerConfirm}
        </if>
        WHERE ORDER_NO = #{orderNo}
    </update>

    <select id="queryTodayOrder" resultType="java.lang.Long">
        SELECT count(1) FROM USER_ORDER where ORDER_NO  LIKE '%${curDate}%'
    </select>

    <select id="getSystemRulesById" resultType="cn.nanmi.msts.web.model.SystemRules">
        select RULE_ID as ruleId,BIDDING_PERIOD as biddingPeriod from SYSTEM_RULES where  RULE_ID = #{ruleId}
    </select>
</mapper>